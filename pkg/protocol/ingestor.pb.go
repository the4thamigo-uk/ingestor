// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ingestor.proto

package ingestor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Source struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{0}
}

func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Source) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type AddRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{1}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type AddResponse struct {
	Source               *Source  `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{2}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListResponse struct {
	Sources              []*Source `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetSources() []*Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

type ReadRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{5}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ec7935f9b1a4496, []int{6}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ReadResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*Source)(nil), "ingestor.Source")
	proto.RegisterType((*AddRequest)(nil), "ingestor.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "ingestor.AddResponse")
	proto.RegisterType((*ListRequest)(nil), "ingestor.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "ingestor.ListResponse")
	proto.RegisterType((*ReadRequest)(nil), "ingestor.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "ingestor.ReadResponse")
}

func init() { proto.RegisterFile("ingestor.proto", fileDescriptor_1ec7935f9b1a4496) }

var fileDescriptor_1ec7935f9b1a4496 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xd1, 0x4e, 0xc2, 0x30,
	0x14, 0x86, 0x29, 0xe8, 0x84, 0x33, 0x44, 0xd3, 0x20, 0x59, 0x66, 0x4c, 0x48, 0xaf, 0x16, 0x2f,
	0x16, 0x82, 0x24, 0x26, 0x5c, 0x68, 0xc0, 0x2b, 0x13, 0x2f, 0xc8, 0x7c, 0x82, 0x41, 0x2b, 0x34,
	0x6e, 0x2b, 0xae, 0xdd, 0x33, 0xfa, 0x5a, 0xc6, 0xb6, 0x1b, 0x75, 0xf1, 0x6e, 0xff, 0xe9, 0x77,
	0xce, 0xf9, 0xcf, 0x9f, 0xc1, 0x88, 0x17, 0x7b, 0x26, 0x95, 0x28, 0xe3, 0x63, 0x29, 0x94, 0xc0,
	0xfd, 0x5a, 0x93, 0x05, 0x78, 0xef, 0xa2, 0x2a, 0x77, 0x0c, 0x8f, 0xa0, 0xcb, 0x69, 0x80, 0xa6,
	0x28, 0x1a, 0x24, 0x5d, 0x4e, 0x71, 0x08, 0xfd, 0x0f, 0x9e, 0xb1, 0x22, 0xcd, 0x59, 0xd0, 0xd5,
	0xd5, 0x46, 0x93, 0x08, 0x60, 0x45, 0x69, 0xc2, 0xbe, 0x2a, 0x26, 0xd5, 0x1f, 0x12, 0xb5, 0xc8,
	0x47, 0xf0, 0x35, 0x29, 0x8f, 0xa2, 0x90, 0x0c, 0x47, 0xe0, 0x49, 0xbd, 0x4e, 0x83, 0xfe, 0xfc,
	0x3a, 0x6e, 0x9c, 0x19, 0x1b, 0x89, 0x7d, 0x27, 0x97, 0xe0, 0xbf, 0x71, 0xa9, 0xec, 0x0e, 0xb2,
	0x84, 0xa1, 0x91, 0x76, 0xd0, 0x3d, 0x5c, 0x18, 0x50, 0x06, 0x68, 0xda, 0xfb, 0x77, 0x52, 0x0d,
	0x90, 0x3b, 0xf0, 0x13, 0x96, 0x36, 0x76, 0x5b, 0x87, 0x92, 0x0d, 0x0c, 0xcd, 0xb3, 0x1d, 0x3d,
	0x01, 0x2f, 0x17, 0x5b, 0x9e, 0xd5, 0xc7, 0x58, 0x85, 0x31, 0x9c, 0x39, 0x61, 0xe8, 0x6f, 0x3c,
	0x86, 0x73, 0x96, 0xa7, 0x3c, 0x0b, 0x7a, 0xba, 0x68, 0xc4, 0xfc, 0x1b, 0x41, 0xff, 0xd5, 0xba,
	0xc1, 0x4b, 0x18, 0xac, 0x28, 0xb5, 0x21, 0x8f, 0x4f, 0x2e, 0x4f, 0x01, 0x86, 0x37, 0xad, 0xaa,
	0x31, 0x42, 0x3a, 0xf8, 0xc9, 0x84, 0x60, 0x9a, 0x25, 0x76, 0x38, 0x27, 0x9b, 0x70, 0xd2, 0x2e,
	0x37, 0xfd, 0xcf, 0x00, 0xbf, 0xa7, 0xd9, 0xe5, 0x4e, 0xbb, 0x93, 0x87, 0xdb, 0xee, 0xe6, 0x40,
	0x3a, 0x33, 0xb4, 0x9e, 0xc1, 0xad, 0x3a, 0xb0, 0x85, 0x3a, 0xa4, 0x39, 0xdf, 0x8b, 0xea, 0x33,
	0xa6, 0x2c, 0x17, 0x0d, 0xbf, 0xbe, 0x7a, 0x11, 0x85, 0x4a, 0x77, 0xaa, 0x3e, 0x76, 0x83, 0xb6,
	0x9e, 0xfe, 0xc3, 0x1e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x6f, 0xf6, 0x99, 0x73, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IngestorClient is the client API for Ingestor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IngestorClient interface {
	AddSource(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	ListSources(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	ReadSource(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (Ingestor_ReadSourceClient, error)
}

type ingestorClient struct {
	cc *grpc.ClientConn
}

func NewIngestorClient(cc *grpc.ClientConn) IngestorClient {
	return &ingestorClient{cc}
}

func (c *ingestorClient) AddSource(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/ingestor.Ingestor/AddSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ingestorClient) ListSources(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/ingestor.Ingestor/ListSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ingestorClient) ReadSource(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (Ingestor_ReadSourceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Ingestor_serviceDesc.Streams[0], "/ingestor.Ingestor/ReadSource", opts...)
	if err != nil {
		return nil, err
	}
	x := &ingestorReadSourceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Ingestor_ReadSourceClient interface {
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type ingestorReadSourceClient struct {
	grpc.ClientStream
}

func (x *ingestorReadSourceClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IngestorServer is the server API for Ingestor service.
type IngestorServer interface {
	AddSource(context.Context, *AddRequest) (*AddResponse, error)
	ListSources(context.Context, *ListRequest) (*ListResponse, error)
	ReadSource(*ReadRequest, Ingestor_ReadSourceServer) error
}

func RegisterIngestorServer(s *grpc.Server, srv IngestorServer) {
	s.RegisterService(&_Ingestor_serviceDesc, srv)
}

func _Ingestor_AddSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngestorServer).AddSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ingestor.Ingestor/AddSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngestorServer).AddSource(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ingestor_ListSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngestorServer).ListSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ingestor.Ingestor/ListSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngestorServer).ListSources(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ingestor_ReadSource_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IngestorServer).ReadSource(m, &ingestorReadSourceServer{stream})
}

type Ingestor_ReadSourceServer interface {
	Send(*ReadResponse) error
	grpc.ServerStream
}

type ingestorReadSourceServer struct {
	grpc.ServerStream
}

func (x *ingestorReadSourceServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Ingestor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ingestor.Ingestor",
	HandlerType: (*IngestorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSource",
			Handler:    _Ingestor_AddSource_Handler,
		},
		{
			MethodName: "ListSources",
			Handler:    _Ingestor_ListSources_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadSource",
			Handler:       _Ingestor_ReadSource_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ingestor.proto",
}
